T = []
arvore=0
qtd =0
Node =0
tres= None
del tres[0]
posium = tres[0]
posidos = tres[1]
posium = int(posium)
posidos = int(posidos)

if posium < posidos:
    cont = 1
    while cont == 1:
        noum =  T.search(posium)
        nodois = T.search(posidos)
        if noum != None:
            valor1 = noum.getDado()
            T.append(valor1)
        posium += 1
        if noum == nodois:
            cont = 2
for i in posium[posium + 1:(posium + qtd) + 1]:
    if i.startswith('A'):
        inserir = int(i[2])
        arvore.insert(Node(inserir))
    elif i.startswith('B'):
        dois = arvore.search(int(j[2]))
        arvore.delete(dois)
    elif i.startswith('C'):
        dois = arvore.search(int(j[2]))
        if T.isEmpty():
            print(0)
        if dois.getKey() == arvore.minimum(dois):
            print(0)
        else:
            dois = arvore.search(int(j[2]))
            print(arvore.antecessor(dois))
            print(arvore.sucessor(dois))
        if arvore.isEmpty():
            print(0)
        else:
            arvore.seach(T.root)
            print('\n')